/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system/liquid";
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


alpha.liquidMetal
{
    internalField   uniform 1.0;

    boundaryField
    {
		
        ".*"
        {
            type        zeroGradient;
            value       uniform (0 0 0);
        }
        
        
		inlet
		{
			//this ensures that only liquid comes in through the inlet
			type            fixedValue;
			value			uniform 1.0;
		}
        
        
    }
}

U
{
    internalField   uniform (0 0 0.069);

    boundaryField
    {

        inlet
        {
		type        		fixedValue;
		value       uniform (0 0 0.069);
	    }   
        
        sink
        {	
			type        zeroGradient;
            value       uniform (0 0 0.069);
        }
        
        topOpening
        {
            type            pressureInletOutletVelocity;
			value           uniform (0 0 0.069);
        }
        
         ".*"
        {
            type            noSlip;
            value           uniform (0 0 0);
        }
        
    }
}

T
{
    internalField   uniform 300;

    boundaryField
    {
		 ".*"
        {
            type            fixedValue;
            value           uniform 300;
        }
		 
		 topOpening
        {
			type            inletOutlet;
            inletValue      uniform 300;	
        }
        
        
        "liquid_to_.*"
        {
            type            compressible::turbulentTemperatureCoupledBaffleMixed;
            Tnbr            T;
            kappaMethod     fluidThermo;
            value           $internalField;
        }
        
        inlet
        { 
			type fixedValue;
			value uniform 300;
		}
		
        sink
        { 
			type fixedValue;
			value uniform 300;
		}
		
    }
}

p_rgh
{
    internalField   uniform 1E+5;

    boundaryField
    {

	inlet	
	{
        type            zeroGradient;
	    value		    uniform 1E+5;
	}
	
	sink
	{
            type       totalPressure;
            p0         uniform 1E+5;
            value      uniform 1E+5;
	}
        

	".*"
	{
		type            fixedFluxPressure;
		value           uniform 1E+5;
	}
}
}

p
{
    internalField   uniform 1E5 ;

    boundaryField
    {
        ".*"
        {
            type            calculated;
		value		uniform 1E5;
        }
        
    }
}

B0
{
internalField   uniform (0.0 0.066 0);

    boundaryField
    {
        ".*"
        {
            type            zeroGradient;
            value           uniform (0.0 0.066 0);
        }
        
    }
}


potE
{
    internalField   uniform 0;

    boundaryField
    {
        
        inlet
        {
			type            			codedFixedValue;
			name		                outletUxB;
			value           			uniform 0;
		}
		 
        sink
        {
			type            zeroGradient;
			value			uniform 0;
		}

        "liquid_to_.*"
        {
            type            compressible::turbulentTemperatureCoupledBaffleMixed;
            Tnbr            potE;
            kappaMethod     lookup;
            kappa       	elcond;
            kappaName      	elcond;
            value           $internalField;
        }
        
		walls		
		{
			type            zeroGradient;
		}
		
		topOpening		
		{
			type            zeroGradient;
		}
		
    }
}

//set fields for simulations with a turbuelnce model. Make sure to include the field files in the 0/ folder before you execute changeDictionary

/*
k
{
	
	internalField   uniform 0.000408375;

	boundaryField
	{
		inlet
		{
			type            fixedValue;
			//intensity       0.05;
			value           $internalField;
		}

		sink
		{
			type            inletOutlet;
			inletValue      $internalField;
			value           $internalField;
		}
		
		topOpening
		{
			type            inletOutlet;
			inletValue      $internalField;
			value           $internalField;
		}
		
		".*"
		{
			type            kqRWallFunction;
			value           $internalField;
		}
			
	}
	
}

nut
{
	internalField   uniform 0;

	boundaryField
	{
	
		inlet
		{
			type            calculated;
			value           uniform 0;
		}

		sink
		{
			type            calculated;
			value           uniform 0;
		}
		
		topOpening
		{
			type            calculated;
			value           uniform 0;
		}
		
		
		"liquid_to_.*"
		{
			type            nutkWallFunction;
			value           uniform 0;

		}
		
		
	}
	
}

omega
{
	
	internalField   uniform 0.4041658;

boundaryField
{
    inlet
    {
        type            fixedValue;
        value           $internalField;
    }


	sink
    {
        type            inletOutlet;
        inletValue      $internalField;
        value           $internalField;
    }
    
	topOpening
    {
        type            inletOutlet;
        inletValue      $internalField;
        value           $internalField;
    }
    
	".*"
    {
        type            omegaWallFunction;
        value           $internalField;
	}

}
	
}

alphat
{
    internalField   uniform 0;
    
    boundaryField
    {
        inlet
        {
            type            calculated;
            value           $internalField;
        }
        sink
        {
            type            calculated;
            value           $internalField;
        }
        
        topOpening
        {
            type            calculated;
            value           $internalField;
        }

        ".*"
        {
            type            compressible::alphatWallFunction;
            value           $internalField;
        }
		
    }
}
*/

// ************************************************************************* //
